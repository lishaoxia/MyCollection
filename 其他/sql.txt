update (select t.stdcode,t.stdname,t.stdunit,m.recid as recid from SNP_TARGET t INNER JOIN MD_ORG m on t.stdname=m.stdname where t.stdunit='0FB64431C3453529FCF96E444C971A83' and t.stdtype='5') e set e.stdunit=e.recid




update (select t.stdcode,t.stdname,t.stdunit,m.recid as recid from SNP_TARGET t INNER JOIN MD_ORG m on t.stdcode=substr(m.stdcode,1,9)
where t.stdunit='0FB64431C3453529FCF96E444C971A83' and t.stdtype='5'and m.level_1='5' and t.stdcode='360112400') e set e.stdunit=e.recid





SELECT '000000000000' stdcode, COUNT(*) FROM SNP_TARGET t left JOIN MD_ORG M ON M.RECID = t.STDUNIT
WHERE t.STDTYPE = 6;

update SNP_R601 t set t.target_code='36098311720006'||substr(t.target_code,15,18)字符串拼接


select count(*) from SNP_R601_21b t where exists (select 1 from SNP_R601 m where m.target_code like '21%' and t.mrecid=m.recid)

select count(*) from snp_r601_21b b where not exists(select 1 from snp_r601 a where a.recid=b.mrecid);

clob字段做为查询条件，update clob字段跟普通语句一样
select * from TABLE表 where dbms_lob.instr(字段名（clod类型）,'查询条件',1,1) > 0


update RP_FORMULA t set t.fm_expr='//'||t.fm_expr where t.fm_level <> 1 and substr(t.fm_code,0,3) in ('601','602','603')

create table 表名 as select * from --备份表

substr("ABCDEFG", 0); //返回：ABCDEFG，截取所有字符 
substr("ABCDEFG", 2); //返回：BCDEFG，截取从B开始之后所有字符 
substr("ABCDEFG", 0, 3); //返回：ABC，截取从A开始3个字符 
substr("ABCDEFG", 0, 100); //返回：ABCDEFG，100虽然超出预处理的字符串最长度，但不会影响返回结果，系统按预处理字符串最大数量返回。 
substr("ABCDEFG", -3); //返回：EFG，注意参数-3，为负值时表示从尾部开始算起，字符串排列位置不变。


select a.s_name,a.s_title,b.rpt_title,c.stdcode,c.stdname,t.period,d.zbcode,d.zbvalue
from INTERSUMDIM t
left join rp_solution a on t.solutionguid=a.recid
left join rp_reportform b on t.reportid=b.recid
left join md_org c on t.unitid=c.recid
left join INTERDATASUMTEMP d on d.interdimid=t.recid
         where t.solutionguid = ?P_YWFA
           and (t.period = ?P_SQ or substr(t.period,1,4)=(substr( ?P_SQ,1,4)-1))
           and t.reportid = '50DFD97780000003F27BD7F227355FA8'
           and d.resulttype='2'
		   
		   
insert into snp_r601_accept_info
  (recid, target_code, region_code)
  select dna.new_recid(), a.target_code, a.region_code
    from snp_r601 a
   where not exists (select (1)
            from snp_r601_accept_info b
           where a.target_code = b.target_code);
		 
insert into snp_r602_accept_info
  (recid, target_code, region_code)
  select dna.new_recid(), c.target_code, c.region_code
    from snp_r602 c
   where not exists (select (1)
            from snp_r602_accept_info d
           where c.target_code = d.target_code);
		   
insert into snp_r603_accept_info
  (recid, target_code, region_code)
  select dna.new_recid(), e.target_code, e.region_code
    from snp_r603 e
   where not exists (select (1)
            from snp_r603_accept_info f
           where e.target_code = f.target_code);




























		   
		   
		   
